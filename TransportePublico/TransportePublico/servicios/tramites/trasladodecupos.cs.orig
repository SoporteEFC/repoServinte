using System;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using LibreriasSintrat.ServiciosCuposTrans;
using TransportePublico;
using LibreriasSintrat.ServiciosCuposTrans;
using LibreriasSintrat.utilidades;
using TransitoPrincipal;

namespace TransportePublico.servicios.tramites
{
    public partial class trasladodecupos : Form
    {
        ServiciosCuposTransService clienteCuposTrans;
        empresasdeServicioTrans newempresa = null;
        empresasdeServicioTrans desempresa = null;
        Boolean cargainicial;
        public trasladodecupos()
        {
            InitializeComponent();
        }

        private void trasladodecupos_Load(object sender, EventArgs e)
        {
            cargainicial = true;
            tipoVehiculoTrans tipo = new tipoVehiculoTrans();
            clienteCuposTrans = WS.ServiciosCuposTransService();
            Funciones funciones = WS.Funciones();
            Object[] listat = (Object[])clienteCuposTrans.getTipoVehiculoTrans(tipo);
            if (listat != null)
            {
                tipovehiculo.DataSource = null;
                tipovehiculo.DisplayMember = "NOMBRE";
                tipovehiculo.ValueMember = "ID";
                funciones.llenarCombo(tipovehiculo, listat);
                cargainicial = false;
            }
        }

        private void btnbuscarempresa_Click(object sender, EventArgs e)
        {
            buscarEmpresa();
        }

        public void buscarEmpresa()
        {
            clienteCuposTrans = WS.ServiciosCuposTransService();
            empresasdeServicioTrans empresa = new empresasdeServicioTrans();
            newempresa = new empresasdeServicioTrans();
            Funciones funciones = WS.Funciones();
            ArrayList Campos = new ArrayList();
            Campos.Add("SIGLA = SIGLA");
            Campos.Add("NOMBRE = NOMBRE");
            Object[] Empresas = (Object[])clienteCuposTrans.getTEmpresasServicio(empresa);
            buscador buscador = new buscador(Empresas, Campos, "Seleccione Empresa Propietaria del Cupo", null);

            if (buscador.ShowDialog() == DialogResult.OK)
            {
                newempresa = (empresasdeServicioTrans)funciones.listToEmpresaServicio(buscador.Seleccion);
                siglaempresa.Text = newempresa.SIGLA;
                nombreempresa.Text = newempresa.NOMBRE;
            }
        }

        private void btnExit_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void tipovehiculo_SelectedValueChanged(object sender, EventArgs e)
        {
            if (cargainicial)
            {
                tipovehiculo.SelectedIndex = -1;
            }
            else
            {
                if (tipovehiculo.SelectedIndex >= 0)
                {
                    verificarCupos();
                }
            }
        }

        private void verificarCupos()
        {
            Object[] mysCupos;
            clienteCuposTrans = WS.ServiciosCuposTransService();
            //detalleRangoCupoTrans cuposdisp = new detalleRangoCupoTrans();
            Funciones funciones = WS.Funciones();

            if (newempresa != null)
            {
                if (Int32.Parse(tipovehiculo.SelectedIndex.ToString()) >= 0)
                {
                    cuposTaxisTrans myCupoTaxis = new cuposTaxisTrans();
                    myCupoTaxis.TT_ID_EMPSERVICIO = newempresa.ID_EMPSERVICIO;
                    myCupoTaxis.TT_TIPOVEH= tipovehiculo.SelectedIndex.ToString();
                    mysCupos = clienteCuposTrans.getSCupos(myCupoTaxis);
                    if (mysCupos != null && mysCupos.Length > 0)
                    {
                        funciones.llenarCombo(numerocupo, mysCupos);
                        numerocupo.Enabled = true;
                        btnSave.Enabled = true;
                    }
                    else
                    {
                        numerocupo.Enabled = false;
                        btnSave.Enabled = false;
                        MessageBox.Show("No existen cupos disponibles para este tipo de vehículo", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        if (desempresa != null)
                        {
                            desempresa = null;
                        }
                        codigodestino.Text = "";
                        nombredestino.Text = "";
                        //limpiarCampos();
                    }
                }
            }

            else
            {
                buscarEmpresa();
            }
        }

        private void btn_SearchDestino_Click(object sender, EventArgs e)
        {
            buscarEmpresaDestino();
        }

        public void buscarEmpresaDestino()
        {
            clienteCuposTrans = WS.ServiciosCuposTransService();
            empresasdeServicioTrans empresa = new empresasdeServicioTrans();
            desempresa = new empresasdeServicioTrans();
            Funciones funciones = WS.Funciones();
            ArrayList Campos = new ArrayList();
            Campos.Add("SIGLA = SIGLA");
            Campos.Add("NOMBRE = NOMBRE");
            Object[] Empresas = (Object[])clienteCuposTrans.getTEmpresasServicio(empresa);
            buscador buscador = new buscador(Empresas, Campos, "Seleccione Empresa a la que se Trasladará del Cupo", null);

            if (buscador.ShowDialog() == DialogResult.OK)
            {
                desempresa = (empresasdeServicioTrans)funciones.listToEmpresaServicio(buscador.Seleccion);
                codigodestino.Text = desempresa.SIGLA;
                nombredestino.Text = desempresa.NOMBRE;

                if (newempresa.ID_EMPSERVICIO == desempresa.ID_EMPSERVICIO)
                {
                    MessageBox.Show("La empresa de destino no puede ser la misma empresa de orígen, Por Favor seleccione otra empresa","Advertencia",MessageBoxButtons.OK,MessageBoxIcon.Warning);
                    codigodestino.Text = "";
                    nombredestino.Text = "";
                    buscarEmpresaDestino();
                }
            }
        }

        private void btnSave_Click(object sender, EventArgs e)
        {
            trasladar();
            //MessageBox.Show("Traslado de cupo realizado correctamente.");
        }

        private void trasladar()
        {
            if (newempresa == null)
            {
                MessageBox.Show("Debe seleccionar una empresa de orígen","Información",MessageBoxButtons.OK,MessageBoxIcon.Information);
                buscarEmpresa();
            }
            else if (tipovehiculo.SelectedIndex < 0)
            {
                MessageBox.Show("Debe seleccionar un tipo de vehículo", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                tipovehiculo.Focus();
            }
            else if (numerocupo.SelectedIndex < 0)
            {
                MessageBox.Show("Debe seleccionar un número de cupo", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                numerocupo.Focus();
            }
            else if (desempresa == null)
            {
                MessageBox.Show("Debe seleccionar una empresa de destino", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                buscarEmpresaDestino();
            }
            else
            {                
                trasladaCupo();
            }
        }

        private void trasladaCupo()
        {
            cuposTaxisTrans cuposeleccionado = new cuposTaxisTrans();
            cuposTaxisTrans micupo = new cuposTaxisTrans();
            Object[] listacups = null;
            cuposeleccionado.TT_IDCUPOTAXI = Int32.Parse(numerocupo.SelectedValue.ToString());
            listacups = clienteCuposTrans.getSCupos(cuposeleccionado);
            if (listacups != null && listacups.Length >= 0)
            {
                micupo = (cuposTaxisTrans)listacups[0];
                micupo.TT_ID_EMPSERVICIO = desempresa.ID_EMPSERVICIO;
                Boolean editcup = clienteCuposTrans.cambiarEmpresaCuposTaxis(micupo);              
                if (editcup)
                {
                    MessageBox.Show("Traslado Exitoso", "Información", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    verificarCupos();
                }
                else
                {
                    MessageBox.Show("Error en traslado de cupo", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    this.Close();
                }
            }
        }

        private void tipovehiculo_KeyPress(object sender, KeyPressEventArgs e)
        {
            Funciones myFun = new Funciones();
            myFun.lanzarTapConEnter(e);
        }

        private void numerocupo_KeyPress(object sender, KeyPressEventArgs e)
        {
            Funciones myFun = new Funciones();
            myFun.lanzarTapConEnter(e);
        }
    }
}
